set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

"这里开始是默认配置
set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | 
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

"start from here:

"1.下面是平台相关的配置
"1.10 设置背景色
set background=dark

"1.20 选择配色方案
colorscheme solarized

"1.30 设置字体，注意，linux下用斜杠\，windows下用冒号:,字体:字号:编码方式
set guifont=Consolas:h14:cANSI
"set guifont=Monaco:80

"1.40 以下为解决中文显示问题,以及相应带来的提示及菜单乱码问题  
set fileformats=unix,dos "后面迁移一下，这个用于*.nix下，\r\n的显示问题
set encoding=utf-8 " 设置vim内部使用的字符编码,原来是cp936  
set fileencodings=utf-8,chinese,latin-1
if has("win32")
set fileencoding=chinese
else
set fileencoding=utf-8
endif
lang messages zh_CN.UTF-8 " 解决console输出乱码   
"解决菜单乱码   
source $VIMRUNTIME/delmenu.vim   
source $VIMRUNTIME/menu.vim  
"下面是设置中文字体的方法
"set guifontwide=幼圆:h13:cANSI

"1.50 去掉vim的GUI版本中的toolbar
"set guioptions=T

"1.60 默认不备份文件
"windows平台需要在_gvimrc文件里设置不备份
"if has("vms")
"set nobackup "do not keep a backup file, use versions instead
"else
"set backup "keep a backup file
"endif  

"2.下面是通用选项的配置
"2.10 去掉有关vi一致性模式，避免以前版本的一些bug和局限
set nocompatible

"2.20 显示行号
set nu

"2.30 自动检测文件的类型
filetype on

"2.40 记录历史的行数
set history=1000

"2.50 语法高亮显示
syntax on

"2.60 代码对齐相关
set autoindent "自动对齐，也就是把当前行的对齐格式应用到下一行
set smartindent "依据上面的对齐格式，智能地选择对齐方式
set tabstop=4 "设置tab键为4个空格
set shiftwidth=4 "设置当行之间交错时使用4个空格

"2.70 设置匹配模式，类似当输入一个左括号时会匹配相应的那个右括号
set showmatch

"2.80 当vim进行编辑时，如果命令错误，会发出一个响声，该设置去掉响声
set vb t_vb=

"2.90 在编辑过程中，在右下角显示光标位置的状态行
set ruler

"2.100 查询时非常方便，如：查找'book'，当输入到/b时，会自动找到第一个
"b开头的单词，当输入到/bo时，会自动找到第一个bo开头的单词，依次类推
set incsearch

"2.110 匹配时忽略大小写
set ignorecase

